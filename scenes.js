const { time, clear } = require('console');
const exp = require('constants');
const { Scenes, Markup } = require('telegraf') 

const mailingKeyboardStart = Markup.keyboard([
    ['–°—Ç–∞—Ä—Ç‚úÖ'],['–°—Ç–æ–ø‚ùå'],['–ù–∞—Å—Ç—Ä–æ–π–∫–∏‚öôÔ∏è']
]).resize()

const varificationkeyboard = Markup.inlineKeyboard([
    Markup.button.callback('–ì–æ—Ç–æ–≤–æ!', 'varification')
])

let upperTime;
let lowerTime;

let hourCounter = 8;
let glassful = 0;

class SceneGenerator {

    GenUpperLimitScene () {
        const messageUpperLimit = new Scenes.BaseScene('upperLimit')
        messageUpperLimit.enter(async (ctx) => {
            await ctx.reply('–ù–∞—á–∏–Ω–∞—è —Å–æ —Å–∫–æ–ª—å–∫–∏ —á–∞—Å–æ–≤ –º–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è?')
        })
        messageUpperLimit.on('text', async (ctx) => {
            upperTime = Number(ctx.message.text)
            if (upperTime) {
                await ctx.reply('–†–∞—Å—Å—ã–ª–∫–∞ –Ω–∞—á–Ω–µ—Ç—Å—è —Å ' + upperTime + ' —á–∞—Å–æ–≤(–∞)')
                await ctx.scene.enter('lowerLimit')
            } else {
                await ctx.reply('–¢—ã –ø—ã—Ç–∞–µ—à—å—Å—è –º–µ–Ω—è –∑–∞–ø—É—Ç–∞—Ç—å! –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 24.')
                await ctx.scene.reenter()
            }
        })
        messageUpperLimit.on('message', (ctx) => ctx.reply('–ü–æ–ø—Ä–æ—É–π –Ω–∞–ø–∏—Å–∞—Ç—å —á–∏—Å–ª–æ, –∏ –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ!'))
        return messageUpperLimit
    }


    GenLowerLimitScene() {
        const messageLowerLimit = new Scenes.BaseScene('lowerLimit')
        messageLowerLimit.enter(async (ctx) => {
            await ctx.reply('–î–æ —Å–∫–æ–ª—å–∫–∏ –º–Ω–µ –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏—è?')
        })
        messageLowerLimit.on('text', async (ctx) => {
            lowerTime = Number(ctx.message.text)
            if (lowerTime) {
                await ctx.reply('–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –≤ ' + lowerTime + ' —á–∞—Å–æ–≤(–∞)')
                await ctx.reply('–ú–æ–ª–æ–¥–µ—Ü! –¢–µ–ø–µ—Ä—å –∑–∞–ø—É—Å—Ç–∏ —Ä–∞—Å—Å—ã–ª–∫—É, –∏ –∫–∞–∂–¥—ã–π —á–∞—Å —Ç–µ–±–µ –±—É–¥–µ—Ç –ø—Ä–∏—Ö–æ–¥–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ —Å –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ–º –≤—ã–ø–∏—Ç—å —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã! –ò–∑–º–µ–Ω–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ –ø—Ä–æ–º–µ–∂—É—Ç–∫–∏ —Ç—ã –º–æ–∂–µ—à—å –æ—Å—Ç–∞–Ω–æ–≤–∏–≤ —Ä–∞—Å—Å—ã–ª–∫—É –∏ –ø—Ä–æ–ø–∏—Å–∞–≤ /settings.', mailingKeyboardStart)
                await ctx.scene.leave()
            } else {
                await ctx.reply('–¢—ã —Å–Ω–æ–≤–∞ –º–µ–Ω—è –æ–±–º–∞–Ω—ã–≤–∞–µ—à—å! –í–≤–µ–¥–∏ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 24, –∏ –Ω–∏—á–µ–≥–æ –±–æ–ª—å—à–µ!')
                await ctx.scene.reenter()
            }
        })
        messageLowerLimit.on('message', (ctx) => ctx.reply('–ü—Ä–µ–∫—Ä–∞—Ç–∏! –í –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö –≤–≤–æ–¥–∏ —Ç–æ–ª—å–∫–æ —á–∏—Å–ª–∞ –æ—Ç 0 –¥–æ 24!'))
        return messageLowerLimit
    }

    GenMailingScene() {
        const mailingMessage = new Scenes.BaseScene('Mailing')
        let hourTimer;
        let messageTimer;
        mailingMessage.enter(async (ctx) => {
            await ctx.reply('–†–∞—Å—Å—ã–ª–∫–∞ –≤–∫–ª—é—á–µ–Ω–∞!')
            hourTimer = setInterval(hourAdding, 10000); // —á–∞—Å = 3600000 –º—Å–µ–∫
            function hourAdding() {
                hourCounter++;
                console.log(hourCounter)
            
                if (hourCounter == 24) {
                    hourCounter = 0;
                }

                if (hourCounter >= upperTime && hourCounter <= lowerTime) {
                    ctx.reply('–í—ã–ø–µ–π —Å—Ç–∞–∫–∞–Ω –≤–æ–¥—ã!', varificationkeyboard)

                    mailingMessage.action('varification', async (ctx) => {
                        await ctx.reply('üëç')
                        glassful++;
                    })
                } else  clearInterval(messageTimer)

                if (hourCounter == lowerTime+1) {
                    if (glassful >= 7) ctx.reply('–ú–æ–ª–æ–¥–µ—Ü! –ó–∞ —Å–µ–≥–æ–¥–Ω—è —Ç—ã –≤—ã–ø–∏–ª ' + glassful + ' —Å—Ç–∞–∫–∞–Ω–∞(–æ–≤) –≤–æ–¥—ã. –î–µ—Ä–∂–∏ –º–µ–¥–∞–ª—å–∫—É! ü•á')
                    if (glassful >= 4 && glassful < 7) ctx.reply('–ù–µ–ø–ª–æ—Ö–æ! –ó–∞ —Å–µ–≥–æ–¥–Ω—è —Ç—ã –≤—ã–ø–∏–ª ' + glassful + ' —Å—Ç–∞–∫–∞–Ω–∞(–æ–≤) –≤–æ–¥—ã. –°—Ç–∞—Ä–∞–π—Å—è –ø–∏—Ç—å –±–æ–ª—å—à–µ! ü•à')
                    if (glassful > 0 && glassful < 4) ctx.reply('–£–∂–∞—Å! –ó–∞ —Å–µ–≥–æ–¥–Ω—è —Ç—ã –≤—ã–ø–∏–ª ' + glassful + ' —Å—Ç–∞–∫–∞–Ω–∞(–æ–≤) –≤–æ–¥—ã. –¢—ã –¥–æ–∂–µ–Ω –ø–∏—Ç—å –≥–æ—Ä–∞–∑–¥–æ –±–æ–ª—å—à–µ! ü•â')
                    if (glassful == 0) ctx.reply('–¢—ã –≤–æ–æ–±—â–µ –∑–¥–µ—Å—å? üí©')
                } 
            }  
        })
        mailingMessage.hears('–°—Ç–æ–ø‚ùå', async (ctx) => {
            clearInterval(messageTimer);
            clearInterval(hourTimer);
            ctx.scene.leave()
            await ctx.reply('–†–∞—Å—Å—ã–ª–∫–∞ –≤—ã–∫–ª—é—á–µ–Ω–∞')
        })
        mailingMessage.on('message', (ctx) => ctx.reply('–ï—Å–ª–∏ —Ö–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–∞—Å—Å—ã–ª–∫–∏, —Å–ø–µ—Ä–≤–∞ –æ—Ç–∫–ª—é—á–∏ —Ä–∞—Å—Å—ã–ª–∫—É'))
        return mailingMessage
    }
}

module.exports = SceneGenerator